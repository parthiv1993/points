{"version":3,"sources":["util.js","Login.js","Constants.js","Navigation.js","LiveAuction.js","PointsRemaining.js","YourTeam.js","AllPlayerDetails.js","PlayersRemaining.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["getJwtToken","localStorage","getItem","getHeaderObject","headers","Authorization","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","e","onLogin","preventDefault","setState","target","value","react_default","a","createElement","style","height","Card","margin","width","top","bottom","Header","Body","Form","onSubmit","onLoginClick","bind","Group","controlId","Label","Control","type","placeholder","onChange","onInputChange","Button","variant","Footer","React","Component","Constants","Navigation","isExtendedMenuOption","_this2","userName","clear","window","location","reload","setTimeout","startAuctionRequest","then","res","toast","success","err","Axios","get","data","post","timeWait","inputText","keys","map","key","info","JSON","stringify","replace","autoClose","className","position","POSITION","TOP_CENTER","Dropdown","Toggle","id","Menu","Item","size","onClick","pauseTimerNow","startTimerNow","timerHandler","changeTimerWaitForSold","changeTimerWaitForNextPlayer","getStatus","_this3","Navbar","bg","Brand","href","concat","Nav","parseInt","renderOtherOptions","startAuctionHandler","logOut","LiveAuction","currentAuctionInfo","bidAmt","getLiveAuctionInfo","interval","setInterval","clearInterval","_","isEqual","bids","response","message","error","console","amt","Math","ceil","_this4","playerId","doBidRequest","bidBy","_this5","markPlayerSoldRequest","_this6","bringNextPlayerRequest","currentPlayer","soldButtonName","length","float","onRefreshHandler","Row","Col","sm","team","grade","nationality","timeLeft","soldTo","soldAt","marginLeft","step","onBlur","roundOff","handleBidInputChange","bid","markPlayerSoldHandler","bringNextPlayerHandler","DisplayBids","Table","striped","bordered","hover","index","PointsRemaining","points","remainingPointsRequest","as","YourTeam","getYourTeam","listStyle","marginRight","border","backgroundColor","player","Toolbar","onToggleFilter","abc","AllPlayerDetails","refreshDataHandler","getAllPlayerData","sortRows","initialRows","sortColumn","sortDirection","sort","b","handleFilterChange","filters","oldFilter","column","filterTerm","players","dPlayers","sortedPlayers","filteredPlayers","columns","sortable","filterable","doc","jsPDF","getRows","autoTable","head","body","save","CsvString","forEach","RowItem","RowIndex","encodeURIComponent","x","document","setAttribute","appendChild","click","log","rows","filteredRows","filterKey","term","filter","toString","toLowerCase","indexOf","display","download","downloadAsExcell","react_data_grid_default","rowGetter","i","rowsCount","minHeight","toolbar","AllPlayerDetails_Toolbar","onGridSort","setdPlayers","onAddFilter","setFilters","onClearFilters","PlayerRemaining","count","remainingPlayerRequest","HomePage","src_Navigation","lg","src_LiveAuction","PlayersRemaining","src_PointsRemaining","src_YourTeam","src_AllPlayerDetails","App","nickName","axios","constants","token","debugged","jwt","decode","setItem","user","saveJwt","forceUpdate","isAuthorized","src_HomePage","src_Login","login","lib","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b703cbe.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport function getJwtToken(){\n    return localStorage.getItem('token1');\n}\n\nexport function checkForJwt(){\n    if(getJwtToken()){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function saveJwt(token){\n    try {\n        const debugged = jwt.decode(token);\n        if(debugged){\n            localStorage.setItem('token1',token);\n            localStorage.setItem('user1',debugged.user)\n        }\n        \n    }\n    catch(e){\n        console.error(e);\n    }\n    \n}\n\nexport function getHeaderObject(){\n    const token = getJwtToken();\n\n    return { 'headers': { 'Authorization': token } }\n}","import React from 'react';\nimport { Button, Row, Col, Table ,Card, Form} from 'react-bootstrap';\n\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            name : ''\n        }\n    }\n\n    onLoginClick(e){\n        this.props.onLogin(this.state.name);\n        e.preventDefault();\n    }\n\n    onInputChange(e){\n        this.setState({\n            name:e.target.value\n        });\n    }\n\n    render(){\n        return (\n            // <div class=\"container d-flex h-100\">\n            // <div class=\"row justify-content-center align-self-center\">\n            <div style={{height:'-webkit-fill-available'}}>\n            <Card style={ {\n                    margin: 'auto',\n                    width: '400px',\n                    top: '25%',\n                    bottom: '0'\n                }}>\n                <Card.Header>\n                    Login\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onLoginClick.bind(this)}>\n                        <Form.Group controlId=\"formNickName\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your given NickName\" onChange={this.onInputChange.bind(this)}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n                <Card.Footer>\n                    Don't have a login ? Contact Parthiv\n                </Card.Footer>\n            </Card>\n            </div>\n            // </div>\n            // <div style={{margin:'auto'}}>\n            //     <form>\n            //         <label>\n            //             NickName :\n            //         </label>\n            //         <input value={this.state.name} onChange={this.onInputChange.bind(this)}/>\n            //         <button onClick={this.onLoginClick.bind(this)}>Login</button>\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Login;","export default {\n    // BASE_URL : 'http://localhost:8080/api',\n     BASE_URL : 'http://contest-ipl-contest-ipl.7e14.starter-us-west-2.openshiftapps.com/api',\n    LIVE_POLL_TIME : 5000,\n    POINTS_POLL_TIME : 60000,\n    MYTEAM_POLL_TIME : 60000\n}","import React, { Component } from 'react';\nimport {Navbar,Nav,Form,FormControl,Button, Dropdown} from 'react-bootstrap';\nimport Axios from 'axios';\nimport Constants from './Constants';\nimport { getJwtToken, getHeaderObject } from './util';\nimport { toast } from 'react-toastify';\nimport './navigation.css'\n\nclass Navigation extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isExtendedMenuOption :false\n        }\n    }\n\n    logOut(){\n        const userName = localStorage.getItem('user1') || 'User';\n        if((userName=='Parthiv' || userName=='Nikhil' ) && !this.state.isExtendedMenuOption) {\n            this.setState({isExtendedMenuOption:true});\n            setTimeout(()=>this.setState({isExtendedMenuOption:false}),10000);\n        }else{\n            localStorage.clear();\n            window.location.reload();\n        }\n    }\n\n    componentWillUnmount() {\n        localStorage.clear();\n    }\n\n    startAuctionHandler(){\n        this.startAuctionRequest().then(\n            (res)=>{\n                toast.success('Auction started. Enjoy the auction!!');\n            },\n            (err)=>{\n\n            }\n        )\n    }\n\n    startAuctionRequest(){\n        return Axios.get(Constants.BASE_URL +'/resetAuction',getHeaderObject());\n    }\n\n    timerHandler(){\n        Axios.get(Constants.BASE_URL +'/toggleTimerEnabled',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    pauseTimerNow(){\n        Axios.get(Constants.BASE_URL +'/pauseTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    startTimerNow(){\n        Axios.get(Constants.BASE_URL +'/startTimer',getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForSold(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForSold',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    changeTimerWaitForNextPlayer(){\n        Axios.post(Constants.BASE_URL +'/changeTimerWaitForNextPlayer',{timeWait:this.inputText*1000},getHeaderObject()).then(\n            (res)=>{\n                toast.success(res.data);\n            },(err)=>{\n\n            }\n        )\n    }\n\n    getStatus(){\n        Axios.get(Constants.BASE_URL +'/getStatus',getHeaderObject()).then(\n            (res)=>{\n                if(res.data){\n                    try{\n                        Object.keys(res.data).map(\n                            key=>\n                                {toast.info(\n                                    [key]+' : ' +(JSON.stringify(res.data[key],null,4).replace(/\\,/g,'___').replace(/\\:/g,'=')\n                                ),{\n                                    autoClose:false,\n                                    className:'statusNotification',\n                                    position : toast.POSITION.TOP_CENTER\n                                }\n                                )\n                            }\n                        )\n                    }\n                    catch(e){\n\n                    }\n                }\n                toast.info(res.data,{\n                    autoClose: false\n                  });\n            },(err)=>{\n\n            }\n        )\n    }\n\n    renderOtherOptions(){\n        return (\n            <div>\n                \n                <Dropdown>\n                    <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-basic\">\n                        Other Options\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item  >\n                            <Button size=\"sm\" variant=\"outline-info\" onClick={this.pauseTimerNow.bind(this)}>Pause Timer now</Button>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                            <Button size=\"sm\" variant=\"outline-info\" onClick={this.startTimerNow.bind(this)}>Start Timer for current player</Button>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                            <Button size=\"sm\" variant=\"outline-info\" onClick={this.timerHandler.bind(this)}>Enable / Disable Timer</Button>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                                <Button size=\"sm\" variant=\"outline-info\" onClick={this.changeTimerWaitForSold.bind(this)}>Change Time to Sold</Button>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                                <Button size=\"sm\" variant=\"outline-info\" onClick={this.changeTimerWaitForNextPlayer.bind(this)}>Change Time to Next player</Button>\n                        </Dropdown.Item>\n                        <Dropdown.Item>\n                                <Button size=\"sm\" variant=\"outline-info\" onClick={this.getStatus.bind(this)}>Get Status</Button>\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        ) \n    }\n\n    render() {\n        const userName = localStorage.getItem('user1') || 'User';\n        return(\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">{`Hi ${userName}`}</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#features\">Features</Nav.Link>\n                <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n                </Nav>\n                {\n                    (userName=='Parthiv' || userName=='Nikhil') &&\n                    <Button variant=\"outline-info\" onClick={this.timerHandler.bind(this)}>Enable / Disable Timer</Button>\n                }\n                &nbsp;\n                {\n                    (userName=='Parthiv' ) && this.state.isExtendedMenuOption && \n                    <input onChange={(e)=>{this.inputText = parseInt(e.target.value)}}></input>\n                }\n                &nbsp;\n                {\n                    (userName=='Parthiv' ) && this.state.isExtendedMenuOption && \n                    this.renderOtherOptions()\n                }\n                &nbsp;\n                {\n                    (userName=='Parthiv' || userName=='Nikhil') &&\n                    <Button variant=\"outline-info\" onClick={this.startAuctionHandler.bind(this)}>Start Auction</Button>\n                }\n                &nbsp;\n\n                \n                <Button variant=\"outline-info\" onClick={this.logOut.bind(this)}>Log Out</Button>\n            </Navbar>\n                    \n        )\n    }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Constants from './Constants';\nimport { Button, Row, Col, Table ,Card} from 'react-bootstrap';\nimport Axios from 'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\n\nclass LiveAuction extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentAuctionInfo : null,\n            bidAmt : 5\n        }\n    }\n\n    componentDidMount(){\n        this.getLiveAuctionInfo();\n        this.interval = setInterval(()=>{\n            this.getLiveAuctionInfo();\n        },Constants.LIVE_POLL_TIME)\n    }\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getLiveAuctionInfo(){\n        Axios.get(Constants.BASE_URL + '/liveAuctionInfo',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.currentAuctionInfo)){\n                    const bidAmt = res.data.bids && res.data.bids[0] && res.data.bids[0].bidAmt+5 || 5\n                    this.setState({currentAuctionInfo:res.data,bidAmt})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n    startAuction(e){\n        e.preventDefault();\n    }\n\n    roundOff(amt){\n        const bidAmt = Math.ceil(parseInt(amt.target.value)/5)*5;\n        this.setState({bidAmt});\n    }\n\n    handleBidInputChange(e){\n        this.setState({bidAmt:e.target.value});\n    }\n\n\n    bid(){\n        if(this.state.bidAmt && this.state.bidAmt>0){\n            const userName = localStorage.getItem('user1') || 'User';\n            const playerId =this.state.currentAuctionInfo.playerId;\n            this.doBidRequest(playerId,this.state.bidAmt,userName).then(\n                (res)=>{\n                    // toast.success('Bid Successfully Placed');\n                    this.getLiveAuctionInfo()\n                },(err)=>{\n                    if(err && err.response && err.response.data && err.response.data.message){\n                        toast.error(err.response.data.message);\n                      }\n                    console.error(err); \n                }\n            )\n        }\n    }\n\n    doBidRequest(playerId,bidAmt,bidBy){\n        return Axios.post(Constants.BASE_URL +'/addBid',{playerId,bidAmt,bidBy},getHeaderObject())\n    }\n\n    markPlayerSoldHandler(){\n        this.markPlayerSoldRequest(this.state.currentAuctionInfo.playerId).then(\n            (res)=>{\n                if(res.data && res.data.message){\n                    toast.success(res.data.message)\n                }\n                this.getLiveAuctionInfo();\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    markPlayerSoldRequest(playerId){\n        return Axios.post(Constants.BASE_URL +'/markAsSold',{playerId},getHeaderObject());\n    }\n    \n    bringNextPlayerHandler(){\n        this.bringNextPlayerRequest().then(\n            res=>{\n                this.getLiveAuctionInfo();\n            },err=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.err(err);\n            }\n        )\n    }\n    bringNextPlayerRequest(){\n        return Axios.get(Constants.BASE_URL +'/bringNextPlayer',getHeaderObject());\n    }\n\n    onRefreshHandler(){\n        this.getLiveAuctionInfo();\n    }\n\n    render() {\n        const userName = localStorage.getItem('user1') || 'User';\n        const currentPlayer = this.state.currentAuctionInfo;\n        const bidsPresent = currentPlayer && currentPlayer.bids && currentPlayer.bids.length && currentPlayer.bids.length>0 ? true : false;\n        const soldButtonName = bidsPresent ? 'Mark as Sold' : 'Mark as Unsold';\n        if(currentPlayer){\n            return(\n                <Card>\n                    <Card.Header>\n                        Current/ Last Player\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row style={{margin:'0px'}}>\n                            <Col sm={12}>\n                                {`PlayerId : ${currentPlayer.playerId}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Player Name : ${currentPlayer.name}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Team : ${currentPlayer.team}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Grade : ${currentPlayer.grade}`}\n                            </Col>\n                            <Col sm={12}>\n                                {`Nationality : ${currentPlayer.nationality}`}\n                            </Col>\n                            <Col sm={12}> \n                                {`Time Left : ${currentPlayer.timeLeft ? currentPlayer.timeLeft/1000-3: 'null'} Seconds`}\n                            </Col>\n                            {\n                                currentPlayer.soldTo &&\n                                    <span>\n                                        <Col sm={12}>\n                                            {`Sold to : ${currentPlayer.soldTo}`}\n                                        </Col>\n                                        <Col sm={12}>\n                                            {`Sold for : ${currentPlayer.soldAt} points`}\n                                        </Col>\n                                        \n                                    </span>\n                            }\n                            {!currentPlayer.soldTo &&\n                                <Col sm={12}>\n                                    <input style={{margin : '15px',marginLeft:'0px'}} type='number' step='5' \n                                        value={this.state.bidAmt }\n                                        placeholder='Bid Amount'\n                                        onBlur={this.roundOff.bind(this)}\n                                        onChange={this.handleBidInputChange.bind(this)}/>\n                                    {userName != 'readOnly' && <Button size='sm' onClick={this.bid.bind(this)}>Bid</Button>}\n                                </Col>\n                            }\n                            {!currentPlayer.soldTo && (userName === 'Parthiv' || userName ==='Nikhil') && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"danger\" \n                                            onClick={this.markPlayerSoldHandler.bind(this)}>{soldButtonName}\n                                        </Button>\n                                    </Col>\n                            }\n                            \n                            {\n                                currentPlayer.soldTo && (userName === 'Parthiv' || userName ==='Nikhil') && \n                                    <Col sm={12}>\n                                        <Button size='sm' variant=\"info\" \n                                            onClick={this.bringNextPlayerHandler.bind(this)}>Get Next Player\n                                        </Button>\n                                    </Col>\n                            }\n                            <Col sm={12}>\n                                {DisplayBids(currentPlayer.bids)}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nconst DisplayBids=(bids)=>{\n    if(bids && bids.length>0) { \n        return(<div>\n            <h4>Previous Bids:</h4>\n            <Table striped={true} bordered={true} hover={true} size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>\n                            Bid By\n                        </th>\n                        <th>\n                            Bid Amt\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {bids.map((bid,index)=><tr key={index}>\n                    <td>\n                        {bid.bidBy}\n                    </td>\n                    <td>\n                        {bid.bidAmt}\n                    </td>\n                </tr>)}\n                </tbody>\n            </Table>\n        </div>)\n    }\n    return (<div>You Can Start Bidding</div>);\n}\n\nexport default LiveAuction;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table, Card ,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass PointsRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            points : null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPointsRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPointsRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    remainingPointsRequest(){\n        Axios.get(Constants.BASE_URL + '/remaningPoints',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({points:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err); \n            }\n        )\n    }\n\n\n    onRefreshHandler(){\n        this.remainingPointsRequest();\n    }\n\n    render(){\n        const points =this.state.points;\n        const user = localStorage.getItem('user1');\n        if(points ){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Points Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Team Owner\n                                        </th>\n                                        <th>\n                                            Points\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(points).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key}\n                                            </td>\n                                            <td>\n                                                {points[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PointsRemaining;\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card,Button} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nclass YourTeam extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            team : null\n        }\n    }\n\n    componentDidMount(){\n        this.getYourTeam();\n        this.interval = setInterval(()=>{\n            this.getYourTeam();\n        },Constants.MYTEAM_POLL_TIME)\n    }\n\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n    \n    getYourTeam(){\n        Axios.get(Constants.BASE_URL + '/myTeam',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.team)){\n                    this.setState({team:res.data})\n                }\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.getYourTeam();\n    }\n\n    render(){\n        const team = this.state.team;\n        if(team){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        My Team\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className='legend'>\n                            <ul style={ {listStyle: 'none' }}>\n                                <li style={{ float: 'left',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'cornflowerblue' }}>\n                                     </span>\n                                     <span>Indian</span>\n                                </li>\n                                <li style={{ float: 'right',marginRight: '10px' }}>\n                                    <span style={{ border: '1px solid #ccc',float: 'left', width: '24px', height: '24px', margin: '2px',backgroundColor:'palevioletred' }}>\n                                     </span>\n                                     <span>Overseas</span>\n                                </li>\n                            </ul>\n                        </div>\n                    <Table bordered='true' hover='true' size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Sr.\n                                    </th>\n                                    <th>\n                                        Player Name\n                                    </th>\n                                    <th>\n                                        Points\n                                    </th>\n                                    <th>\n                                        Team\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    team.map(\n                                        (player,index)=>\n                                            <tr key={index} style={{backgroundColor:player.nationality =='Indian'?'cornflowerblue':'palevioletred'}}>\n                                                <td>\n                                                    {index+1}\n                                                </td>\n                                                <td>\n                                                    {player.name}\n                                                </td>\n                                                <td>\n                                                    {player.soldAt}\n                                                </td>\n                                                <td>\n                                                    {player.team}\n                                                </td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                \n            )\n        }\n        return null;\n    }\n}\n\nexport default YourTeam;","import React, { useState }  from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table ,Card, Button} from 'react-bootstrap';\nimport ReactDataGrid from 'react-data-grid';\n// import { Toolbar, Data } from \"react-data-grid-addons\";\nimport './Grid.css';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { toast } from 'react-toastify';\n\n// const selectors = Data.Selectors;\n\nclass Toolbar extends React.Component{\n    render(){\n        return(<div><Button onClick={()=>this.props.onToggleFilter(this.abc)} style={{float:'right'}}>Filter</Button></div>)\n    }\n}\n\nclass AllPlayerDetails extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            players : [],\n            dPlayers : [],\n            sortedPlayers : [],\n            filteredPlayers : [],\n            filters : {}\n        }\n\n        this.columns = [\n            { key: 'playerId', name: 'Player ID', sortable:true,filterable : true},\n            { key: 'name', name: 'Player Name' ,sortable:true,filterable : true},\n            { key : 'grade',name:'Grade',sortable:true,filterable :true},\n            { key: 'team', name: 'IPL Team' ,sortable:true,filterable :true},\n            { key: 'soldTo', name: 'Sold To' ,sortable:true,filterable : true} ,\n            { key: 'nationality', name: 'Nationality' ,sortable:true,filterable : true} ,\n            { key: 'soldAt', name: 'Price' ,sortable:true} \n        ]\n    }\n\n    componentDidMount(){\n        this.getAllPlayerData();\n    }\n    \n    getAllPlayerData(){\n        Axios.get(Constants.BASE_URL + '/allPlayers',getHeaderObject()).then(\n            (res)=>{\n                this.setState({players:res.data,dPlayers:res.data})\n            },(err)=>{\n                if(err && err.response && err.response.data && err.response.data.message){\n                    toast.error(err.response.data.message);\n                  }\n                console.error(err);\n            }\n        )\n    }\n\n    refreshDataHandler= ()=>{\n        this.getAllPlayerData();\n    }\n    \n    download (){\n        try{\n            const doc = new jsPDF();\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            doc.autoTable({\n                head: [['ID','Player Name','Team','Sold At','Sold To','Grade','Nationality','\\r\\n']],\n                body:filteredPlayers.map(player=>\n                    [\n                        player.playerId,\n                        player.name,\n                        player.team,\n                        player.soldAt,\n                        player.soldTo,\n                        player.grade,\n                        player.nationality\n                    ]\n                )\n            });\n            doc.save('summary.pdf');\n            var CsvString = \"Player Id,Name,Team,Sold At,Sold To,Grade,Nationality,Bids\\r\\n\";\n            filteredPlayers.forEach(function(RowItem, RowIndex) {\n                for(var key in RowItem){\n                // RowItem.forEach(function(ColItem, ColIndex) {\n                    CsvString += JSON.stringify(RowItem[key]).replace(/\\,/g,'') + ',';\n                }\n                CsvString += \"\\r\\n\";\n            });\n            CsvString = \"data:application/csv,\" + encodeURIComponent(CsvString);\n            var x = document.createElement(\"A\");\n            x.setAttribute(\"href\", CsvString );\n            x.setAttribute(\"download\",\"somedata.csv\");\n            document.body.appendChild(x);\n            x.click();\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    downloadAsExcell(){\n        try{\n            const filteredPlayers = this.getRows(this.state.dPlayers, this.state.filters);\n            var CsvString = \"Player Id,Name,Team,Sold At,Sold To,Grade,Nationality,Bids\\r\\n\";\n            filteredPlayers.forEach(function(RowItem) {\n                for(var key in RowItem){\n                    CsvString += JSON.stringify(RowItem[key]).replace(/\\,/g,'') + ',';\n                }\n                CsvString += \"\\r\\n\";\n            });\n            CsvString = \"data:application/csv,\" + encodeURIComponent(CsvString);\n            var x = document.createElement(\"A\");\n            x.setAttribute(\"href\", CsvString );\n            x.setAttribute(\"download\",\"auction2.csv\");\n            document.body.appendChild(x);\n            x.click();\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    setdPlayers(dPlayers){\n        this.setState({dPlayers});\n    }\n\n    getRows(rows, filters) {\n        var filteredRows = rows;\n        Object.keys(filters).map(filterKey=>{\n            const term = filters[filterKey].filterTerm;\n            filteredRows = filteredRows.filter((value)=>{\n                return value[filterKey] && (value[filterKey].toString().toLowerCase()).indexOf(term.toLowerCase())>-1\n            });\n        })\n        return filteredRows;\n    }\n\n    sortRows = (initialRows, sortColumn, sortDirection) =>  {\n        const comparer = (a, b) => { \n            if (sortDirection === \"ASC\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else if (sortDirection === \"DESC\") {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        };\n        \n        return sortDirection === \"NONE\" ? initialRows : initialRows.sort(comparer);\n    };\n\n    handleFilterChange = filters => {\n        // const newFilters = { ...filters };\n        const oldFilter = this.state.filters;\n        const key = filters.column.key;\n\n        if (filters.filterTerm) {\n          oldFilter[key] = filters;\n        } else {\n          delete oldFilter[key];\n        }\n        return oldFilter;\n    };\n\n    setFilters(filters){\n        this.setState({filters});\n    }\n\n    render(){\n        var players = this.state.players;\n        const dPlayers = this.state.dPlayers;\n        const filters = this.state.filters;\n        const filteredRows = this.getRows(dPlayers, filters);\n        if(players &&players.length>0){\n            return(\n                <div>\n                    <h2 style={{display:'inline-block'}}>\n                        All PLayers Data \n                    </h2>\n                    &nbsp;\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.download.bind(this)}>\n                        Download PDF\n                    </Button>\n                    &nbsp;<span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.downloadAsExcell.bind(this)}>\n                        Download Excell\n                    </Button>\n                    <span style={{float:'right'}}>&nbsp;</span>\n                    <Button variant={'info'} style={{float:'right'}} onClick={this.refreshDataHandler.bind(this)}>\n                        Refresh Data\n                    </Button>\n                    <ReactDataGrid\n                        columns={this.columns}\n                        rowGetter={i => filteredRows[i]}\n                        rowsCount={filteredRows.length}\n                        minHeight={500}\n                        toolbar={<Toolbar/>}\n                        onGridSort={(sortColumn, sortDirection) => this.setdPlayers(this.sortRows(players, sortColumn, sortDirection))}\n                        onAddFilter={filter => this.setFilters(this.handleFilterChange(filter))}\n                        onClearFilters={() => this.setFilters({})}\n                    />\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default AllPlayerDetails;\n\n","import React from 'react';\nimport _ from 'lodash';\nimport Axios from'axios';\nimport { getJwtToken, getHeaderObject } from './util';\nimport Constants from './Constants';\nimport { Table, Card, Button } from 'react-bootstrap';\n\n\nclass PlayerRemaining extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            count:null\n        }\n    }\n\n    componentDidMount(){\n        this.remainingPlayerRequest();\n        this.interval = setInterval(()=>{\n            this.remainingPlayerRequest();\n        },Constants.POINTS_POLL_TIME)\n    \n    }\n\n    componentWillUnmount(){\n        window.clearInterval(this.interval);\n    }\n\n    remainingPlayerRequest(){\n        Axios.get(Constants.BASE_URL + '/getRemainingPlayersCount',getHeaderObject()).then(\n            (res)=>{\n                if(!_.isEqual(res.data,this.state.points)){\n                    this.setState({count:res.data})\n                }\n            },(err)=>{\n                console.error(err);\n            }\n        )\n    }\n\n    onRefreshHandler(){\n        this.remainingPlayerRequest();\n    }\n\n    render(){\n        const count = this.state.count;\n        const user = localStorage.getItem('user1');\n        if(count){\n            return(\n                <Card>\n                    <Card.Header as=\"h5\">\n                        Players Remaining\n                        <Button variant=\"dark\" size='sm' style={{float:'right'}} onClick={this.onRefreshHandler.bind(this)}>Refresh</Button>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped={true} bordered={true} hover={true} >\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            Grade\n                                        </th>\n                                        <th>\n                                            Number of Players\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Object.keys(count).map((key,index)=>\n                                        <tr key={index }>\n                                            <td >\n                                                {key.replace('_',' ')}\n                                            </td>\n                                            <td>\n                                                {count[key]}\n                                            </td>\n                                        </tr>)}\n                                </tbody>\n                            </Table>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        return null;\n    }\n}\n\nexport default PlayerRemaining;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport LiveAuction from './LiveAuction';\nimport { Row,Col } from 'react-bootstrap';\nimport PointsRemaining from './PointsRemaining';\nimport YourTeam from './YourTeam';\nimport AllPlayerDetails from './AllPlayerDetails';\nimport PlayersRemaining from './PlayersRemaining';\n\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n          <Navigation/>\n          <br/>\n          <br/>\n          <Row style={{margin:'0px'}}>\n            <Col sm={12} lg={3} >\n              <LiveAuction/>\n              </Col>\n            <Col sm={12} lg={3} >\n              <PlayersRemaining/>\n              </Col>\n            <Col  sm={12} lg={3}>\n              <PointsRemaining/>\n            </Col>\n            <Col sm={12} lg={3}>\n              <YourTeam/>\n            </Col>\n            <Col sm={12}>\n              <br/>\n            </Col>\n            <Col sm={12}>\n              <AllPlayerDetails/>\n            </Col>\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { checkForJwt, saveJwt } from './util';\nimport Login from './Login';\nimport HomePage from './HomePage';\nimport axios from 'axios';\nimport constants from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  login(nickName){\n    axios.post(constants.BASE_URL+'/login',{nickName}).then((res)=>{\n      saveJwt(res.data.token)\n      this.forceUpdate();\n    },(err)=>{\n        if(err && err.response && err.response.data && err.response.data.message){\n          toast.error(err.response.data.message);\n        }\n      console.log(err.response);\n    })\n  }\n\n  render() {\n    const isAuthorized = checkForJwt();\n    return (\n      <div>{isAuthorized?<HomePage/>:<Login onLogin={this.login.bind(this)}/>}<ToastContainer /></div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}